~~
~~
~~ The MIT License
~~
~~ Copyright 2006-2012 The Codehaus.
~~
~~ Permission is hereby granted, free of charge, to any person obtaining a copy of
~~ this software and associated documentation files (the "Software"), to deal in
~~ the Software without restriction, including without limitation the rights to
~~ use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
~~ of the Software, and to permit persons to whom the Software is furnished to do
~~ so, subject to the following conditions:
~~
~~ The above copyright notice and this permission notice shall be included in all
~~ copies or substantial portions of the Software.
~~
~~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
~~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
~~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
~~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
~~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
~~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
~~ SOFTWARE.
~~

  ------
  Using the Application Assembler Plugin
  ------
  Karl Heinz Marbaise
  ------
  2012.04.25
  ------

The 'Booter' Mechanism

* Generated Directory Structure

  Based on the described plugin {{{./usage-booter.html}configuration}} you will
  find the following structure within the <<target>> folder after doing a
  <<mvn clean package>> (only excerpts):

+--------------------------
.
|-- appassembler
|   `-- repo
.         .
|-- generated-resources
|   `-- appassembler
.         .
+--------------------------

  The structure under <<target/appassembler/repo>> looks like this and contains
  all dependencies you have defined in your project plus the defined dependency
  to the <appassembler-booter> artifact.

+--------------------------
.
`-- repo
    |-- junit
    |   `-- junit
    |       `-- 3.8.1
    |           `-- junit-3.8.1.jar
    |-- net
    |   `-- java
    |       `-- dev
    |           `-- stax-utils
    |               `-- stax-utils
    |                   `-- 20070216
    |                       `-- stax-utils-20070216.jar
    |-- org
    |   `-- codehaus
    |       |-- mojo
    |       |   `-- appassembler
    |       |       |-- appassembler-booter
    |       |       |   `-- ${project.version}
    |       |       |       `-- appassembler-booter-${project.version}.jar
    |       |       |-- appassembler-model
    |       |       |   `-- ${project.version}
    |       |       |       `-- appassembler-model-${project.version}.jar
    |       |       `-- example
    |       |           `-- appassembler-example-booter
    |       |               `-- 1.0-SNAPSHOT
    |       |                   `-- appassembler-example-booter-1.0-SNAPSHOT.jar
    |       `-- plexus
    |           `-- plexus-utils
    |               `-- 1.5.6
    |                   `-- plexus-utils-1.5.6.jar
    `-- stax
        |-- stax
        |   `-- 1.1.2-dev
        |       `-- stax-1.1.2-dev.jar
        `-- stax-api
            `-- 1.0.1
                `-- stax-api-1.0.1.jar

+--------------------------

  The following structure can be found under <<target/generated-resources/appassembler>>.
  The <<booter-unix/bin/my-server>> script is the unix script for running your application whereas
  the <<booter-windows/bin/my-server.bat>> script is the Windows script.
  The <<booter-unix/etc/my-server-xml>> file contains all dependencies which is later been read
  by the booter mechanism to start your application.

+--------------------------
.
`-- appassembler
    |-- booter-unix
    |   |-- bin
    |   |   `-- my-server
    |   `-- etc
    |       |-- my-server
    |       |   `-- lib
    |       .....
    |       `-- my-server.xml
    `-- booter-windows
        |-- bin
        |   `-- my-server.bat
        `-- etc
            |-- my-server
            |   `-- lib
            |.....
            `-- my-server.xml

+--------------------------

  The structures under <<etc/myserver/lib>> is created based on the current
  inflexibility of the appassembler-plugin (might be fixed in the future).

  And finally you would like to have a running example which can be looked at
  the {{{./usage-booter-running.html}How to get an running application?}}
  section.

   []

